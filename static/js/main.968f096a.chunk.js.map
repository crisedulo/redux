{"version":3,"sources":["initializers/firebase.js","componets/AuthElement.js","containers/Login.js","initializers/actions.js","componets/AppNav.js","componets/AlbumCard.js","componets/AlbumsList.js","containers/Albums.js","componets/PhostosCarrousel.js","componets/PhotosList.js","containers/Album.js","App.js","serviceWorker.js","initializers/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","withStyles","container","display","flexDirection","props","react_default","a","createElement","className","classes","user","Avatar","src","providerData","photoURL","IconButton","color","onClick","logout","ExitToApp_default","Button","variant","login","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","_this2","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","token","credential","accessToken","saveToken","console","log","catch","err","_this3","signOut","clearToken","componets_AuthElement","Component","mapDispachToProps","type","connect","state","AppNav","AppBar","position","Toolbar","nav","Typography","component","grow","containers_Login","flexGrow","textAlign","posed","div","item","minWidth","margin","boxSizing","media","minHeight","Card","setAlbum","album","CardMedia","image","coverPhotoBaseUrl","CardContent","componet","glutterBottom","title","mediaItemsCount","Grid","spacing","justify","albums","map","index","componets_AlbumCard","key","Albums","loadphotos","axios","url","method","headers","Authorization","concat","r","setAlbums","data","componets_AlbumsList","mapDispatchToProps","clearAlbums","mainAlbum","overflowX","justifyContent","padding","img","height","card","minwith","marginRigth","photos","photo","id","baseUrl","filename","varint","length","componets_PhostosCarrousel","Album","prevProps","loadPhotos","__webpack_require__","e","module","setPhotos","default","mediaItems","albumId","PhotosList","clearPhotos","App","componets_AppNav","containers_Album","containers_Albums","Boolean","window","location","hostname","match","rootReducer","combineReducers","arguments","undefined","action","mainEnhancer","compose","persistState","createStore","onAuthStateChanged","store","dispatch","setUser","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.968f096a.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAW5wJgS2VwHafT9jm1TjMYX_52bVghxZY\",\r\n    authDomain: \"albunes-7b2b3.firebaseapp.com\",\r\n    databaseURL: \"https://albunes-7b2b3.firebaseio.com\",\r\n    projectId: \"albunes-7b2b3\",\r\n    storageBucket: \"gs://albunes-7b2b3.appspot.com\",\r\n    messagingSenderId: \"39895454857\",\r\n    appId: \"1:39895454857:web:8d617d41b5a4cfdf\"\r\n  }\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n  export default firebase","import React from 'react'\r\nimport IconButtom from \"@material-ui/core/IconButton\"\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\"\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport Button from '@material-ui/core/Button'\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\nconst AuthElement =  function (props) {\r\n    const logInButton=()=>{\r\n        if (props.user)return( \r\n            [<Avatar src = {props.user.providerData[0].photoURL}/>,<IconButtom color = \"inherit\"onClick={props.logout}><ExitToApp></ExitToApp></IconButtom>]\r\n        )\r\n        return (\r\n        <Button variant =\"contained\" onClick ={props.login} >\r\n        Iniciar Sesion con Google\r\n        </Button>    \r\n    )\r\n    }\r\n  \r\n        return (\r\n            <div className ={props.classes.container}>\r\n                {logInButton()}\r\n            </div>\r\n        )\r\n    }\r\nexport default withStyles({\r\ncontainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\"\r\n}\r\n})(AuthElement)","import React, { Component } from 'react'\r\nimport firebase from  \"../initializers/firebase\"\r\nimport {connect} from \"react-redux\"\r\nimport AuthElement from \"../componets/AuthElement\"\r\nimport {saveToken, clearToken} from \"../initializers/actions\"\r\n\r\nclass Login extends Component {\r\n    constructor(props)\r\n    {super(props)\r\n        this.login = this.login.bind(this)\r\n        this.logout = this.logout.bind(this)\r\n    }\r\n      \r\n\r\n\r\n    login(){\r\n        let provider = new firebase.auth.GoogleAuthProvider()\r\n        provider.addScope(\"https://www.googleapis.com/auth/photoslibrary\")\r\n        firebase.auth().signInWithPopup(provider).then(result =>{\r\n            let token = result.credential.accessToken\r\n            this.props.saveToken(token)\r\n            console.log(token)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    logout(){\r\n        firebase.auth().signOut().then(()=>{\r\n        this.props.clearToken()\r\n        })\r\n\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <AuthElement \r\n            login={this.login}\r\n            logout={this.logout}\r\n         \r\n            token ={this.token}\r\n            user = {this.props.user}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        token: state.token,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispachToProps = {\r\nsaveToken: saveToken,\r\nclearToken: clearToken\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispachToProps)(Login)","export const saveToken = (token)=>{\r\n    return {\r\n        type: \"SET_TOKEN\",\r\n        token\r\n    }\r\n}\r\nexport const clearToken = ()=>{\r\n    return {\r\n        type: \"CLEAR_TOKEN\"\r\n    }\r\n}\r\n\r\nexport const setUser = (user)=>{\r\n    return {\r\n        type: \"LOGGED_IN\",\r\n        user\r\n    }\r\n}\r\n\r\nexport const clearUser = ()=>{\r\n    return{\r\n        type: \"SIGN_OUT\"\r\n    }\r\n}\r\n\r\nexport const setAlbums = (albums)=>{\r\n    return {\r\n        type: \"SET_ALBUMS\",\r\n        albums\r\n    }\r\n}\r\n\r\nexport const clearAlbums = ()=>{\r\n    return{\r\n        type: \"CLEAR_ALBUMS\"\r\n    }\r\n}\r\n\r\nexport const setAlbum = (album)=>{\r\n    return {\r\n        type: \"SET_ALBUM\",\r\n        album\r\n    }\r\n}\r\n\r\nexport const clearAlbum = ()=>{\r\n    return{\r\n        type: \"CLEAR_ALBUM\"\r\n    }\r\n}\r\nexport const setPhotos = (photos)=>{\r\n    return {\r\n        type: \"SET_PHOTOS\",\r\n        photos\r\n    }\r\n}\r\n\r\nexport const clearPhotos = ()=>{\r\n    return{\r\n        type: \"CLEAR_PHOTOS\"\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Login from \"../containers/Login\"\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport  Typography  from '@material-ui/core/Typography';\r\n class AppNav extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar className = {this.props.classes.nav}>\r\n                        <Typography variant =\"h6\" component =\"h1\" className={this.props.classes.grow}>\r\n                            Albums \r\n                        </Typography>\r\n                       \r\n                        <Login/>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withStyles({\r\n    grow: {flexGrow:1,textAlign:\"left\"},\r\n    nav:{\r\n        color: \"white\"\r\n    }\r\n})(AppNav)","import React from \"react\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport CardMedia from \"@material-ui/core/CardMedia\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport  { withStyles } from '@material-ui/styles'\r\nimport posed from \"react-pose\"\r\nconst Box = posed.div({\r\n    \r\n})\r\n\r\nfunction AlbumCard(props) {\r\n    return (\r\n        <Card className = {props.classes.item} onClick={()=> props.setAlbum(props.album)}>\r\n            <CardMedia className ={props.classes.media} image ={props.album.coverPhotoBaseUrl}/>\r\n            <CardContent>\r\n                <Typography variant =\"h5\" componet =\"h2\" glutterBottom>{props.album.title}</Typography>\r\n                <Typography componet =\"p\">{props.album.mediaItemsCount}foto</Typography>\r\n            </CardContent>\r\n        </Card>     \r\n    )\r\n}\r\nexport default withStyles({\r\n    item:{\r\n        minWidth:\"350px\",\r\n        margin: \"1em\",\r\n        boxSizing:\"border-box\"\r\n\r\n    },\r\n    media:{\r\n    minHeight:\"200px\"\r\n    \r\n}\r\n})(AlbumCard)","import React from 'react'\r\nimport AlbumCard from \"./AlbumCard\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport  { withStyles } from '@material-ui/styles'\r\n\r\nfunction AlbumsList(props) {\r\n    return (\r\n        <Grid container spacing ={16} justify =\"center\">\r\n            {\r\n                props.albums.map((album,index)=>{\r\n                return <AlbumCard setAlbum ={props.setAlbum} album ={album} key = {index}/>\r\n            })\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\nexport default withStyles({\r\n\r\n})(AlbumsList)","import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport {setAlbums, clearAlbums, setAlbum} from \"../initializers/actions\"\r\nimport axios from \"axios\"\r\nimport AlbumsList from \"../componets/AlbumsList\"\r\n\r\n\r\nclass Albums extends Component {\r\n    componentDidMount(){\r\n        this.loadphotos()\r\n       if (process.env.NODE_ENV ===\"production\")\r\n       {\r\n        this.loadphotos()\r\n       }\r\n       else\r\n       {\r\n        this.loadphotos()\r\n           import(\"../data/albums\").then(module=>{\r\n               this.props.setAlbums(module.default.albums)\r\n           })\r\n\r\n       }\r\n    }\r\n\r\n\r\n    loadphotos(){\r\n        axios({\r\n            url: \"https://photoslibrary.googleapis.com/v1/albums\",\r\n            method: \"GET\",\r\n            headers: {\r\n            \"Authorization\": `Bearer ${this.props.token}`\r\n          }\r\n        }).then(r=>{\r\n            this.props.setAlbums(r.data.albums)\r\n        }).catch(console.log)\r\n    }\r\n    \r\n      \r\n    \r\n    render() {\r\n    return (<AlbumsList setAlbum= {this.props.setAlbum} albums ={this.props.albums}/> \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>({\r\n    albums: state.albums,\r\n    token: state.token,\r\n    mainAlbum: state.mainAlbum\r\n})\r\nconst mapDispatchToProps ={\r\n    setAlbums,\r\n    clearAlbums,\r\n    setAlbum\r\n}\r\n   \r\nexport default connect(mapStateToProps,mapDispatchToProps)(Albums)","import React from 'react'\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\n\r\n\r\nfunction PhostosCarrousel(props) {\r\n    return (\r\n        <div className = {props.classes.container}>\r\n            {props.photos.map((photo,index)=>{\r\n                return(\r\n                    <Card key ={photo.id} className ={props.classes.card}>\r\n                        <img className={props.classes.img} src={photo.baseUrl}/>\r\n                        <CardContent>\r\n                            <Typography variant =\"caption\" component =\"p\">\r\n                                {photo.filename}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                )\r\n\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        overflowX: \"scroll\",\r\n        justifyContent: \"center\",\r\n        padding:\"1em 0\"\r\n    },\r\n    img:{\r\n        minWidth: \"100%\",\r\n        height:\"auto\"\r\n\r\n    },\r\n    card:{\r\n        minwith: \"300px\",\r\n        marginRigth: \"1em\"\r\n    }\r\n})(PhostosCarrousel)","import React from 'react'\r\nimport  { withStyles } from '@material-ui/styles'\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport PhotosCarrousel from \"./PhostosCarrousel\"\r\nfunction PhothosList(props) {\r\n    return (\r\n        <div className ={props.classes.container}>\r\n            { props.album &&[\r\n            <Typography varint =\"h4\" component =\"h2\">{props.album? props.album.title:\"\"}</Typography>,\r\n            <Button>Regresar Atras</Button>,\r\n            <Typography varint =\"headline\" component =\"h3\">Fotos del album</Typography>,\r\n            <Typography varint =\"caption\" component =\"p\">{props.photos.length} Fotos(s) en este album</Typography>,\r\n            <PhotosCarrousel photos ={props.photos}></PhotosCarrousel>\r\n            ]    \r\n        }\r\n        </div>\r\n    )\r\n}\r\nexport default withStyles({\r\n    container:{\r\n        justifyContent: \"center\"\r\n    }\r\n})(PhothosList)\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport PhotosList from \"../componets/PhotosList\"\r\n\r\nimport {setPhotos, clearPhotos} from \"../initializers/actions\"\r\nimport axios from 'axios';\r\nclass Album extends Component {\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.mainAlbum) \r\n        {if (process.env.NODE_ENV === \"production\")\r\n        {\r\n            this.loadPhotos()\r\n        }\r\n        }\r\n        else\r\n        {\r\n            this.loadPhotos()\r\n            import (\"../data/photos\").then(module =>{\r\n                this.props.setPhotos(module.default.mediaItems)\r\n            })\r\n\r\n        }\r\n    }\r\n    loadPhotos(){\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"https://photoslibrary.googleapis.com/v1/mediaItems:search\",\r\n            headers:{\r\n                \"Authorization\":`Bearer ${this.props.token}`\r\n            },\r\n            data:{\r\n\r\n                albumId: this.props.mainAlbum.id\r\n            }\r\n        }).then(r=>{\r\n            console.log(r)\r\n            this.props.setPhotos(r.data.mediaItems)\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n           <PhotosList album={this.props.mainAlbum} photos ={this.props.photos}/>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    mainAlbum: state.mainAlbum,\r\n    token: state.token,\r\n    photos: state.photos\r\n\r\n})\r\nconst mapDispatchToProps={\r\n    setPhotos,\r\n    clearPhotos\r\n\r\n\r\n}\r\nexport default connect (mapStateToProps, mapDispatchToProps)(Album)\r\n","import React from 'react';\nimport './App.css';\nimport AppNav from \"./componets/AppNav\"\nimport Albums from \"./containers/Albums\"\nimport Album from \"./containers/Album\"\n\nfunction App() {\n \n  \n  return (\n    <div >\n        <AppNav/>\n        <Album/>\n        <Albums/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, combineReducers,compose} from \"redux\"\r\nimport persistState from \"redux-localstorage\"\r\n\r\nfunction tokenReducer (state= \"\", action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case \"SET_TOKEN\":\r\n         return action.token\r\n        case \"CLEAR-TOKEN\":\r\n         return \"\"\r\n         default:\r\n             return state\r\n    }\r\n}\r\nfunction userReducer (state= null, action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case \"LOGGED_IN\":\r\n         return action.user\r\n        case \"SIGN_OUT\":\r\n         return null\r\n         default:\r\n             return state\r\n    }\r\n}\r\nfunction albumsReducer (state= [], action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case \"SET_ALBUMS\":\r\n         return action.albums\r\n        case \"CLEAR_ALBUMS\":\r\n         return []\r\n         default:\r\n             return state\r\n    }\r\n}\r\nfunction albumReducer (state = null, action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case \"SET_ALBUM\":\r\n         return action.album\r\n        case \"CLEAR_ALBUM\":\r\n         return null\r\n         default:\r\n             return state\r\n    }\r\n}\r\nfunction photosReducer (state = [], action)\r\n{\r\n    switch(action.type)\r\n    {\r\n        case \"SET_PHOTOS\":\r\n         return action.photos\r\n        case \"CLEAR_PHOTOS\":\r\n         return []\r\n         default:\r\n             return state\r\n    }\r\n}\r\n\r\nlet rootReducer = combineReducers({\r\n    token: tokenReducer,\r\n    user: userReducer,\r\n    albums: albumsReducer,\r\n    mainAlbum: albumReducer,\r\n    photos: photosReducer\r\n})\r\n\r\nlet mainEnhancer = compose (persistState(\"token\"))\r\nexport default createStore(rootReducer,{},mainEnhancer)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\"\nimport store from \"./initializers/store\"\nimport {setUser,clearUser} from \"./initializers/actions\"\nimport firebase from \"./initializers/firebase\"\nfirebase.auth().onAuthStateChanged((user)=>{\n    if (user)\n    {\n        store.dispatch(setUser(user))\n\n    }\n    else\n    {\n        store.dispatch(clearUser())\n\n\n    }\n\n})\n\n\n\nReactDOM.render(<Provider store = {store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}